//*********構造函數與析构函数*********

#include<iostream>
using namespace std;

class Person
{
public:
	//1. 構造函數，進行初始化操作
    //沒有返回值，不用寫void
    //函數名與類名相同
    //構造函數可以有參數，可以發生重載
    //創建對象的時候，構造函數會自動調用，而且只會調用一次
	Person()
	{
		cout << "Person的构造函数调用" << endl;
	}

	//2. 析构函数，進行清理操作
    //沒有返回值，不用寫void
    //函數名與類名相同，但要在前面有`~`
    //析构函数可以不可以有參數，所以不可以發生重載
    //對象在銷毀前，會自動調用析构函数，而且只會調用一次
	~Person()
	{
		cout << "Person的析构函数调用" << endl;
	}

};

//構造函數和析构函數都是必須有的，如果我們沒有去撰寫構造函數和析构函數
//編譯器會自動提供一個空的構造函數和析构函數
void test01()
{
	Person p;   //在棧上的數據，test01執行完畢後，會自動釋放這個對象
}

int main() {
	
	test01();

	system("pause");

	return 0;
}